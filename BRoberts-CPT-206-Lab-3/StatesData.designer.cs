#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BRoberts_CPT_206_Lab_3
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class StatesDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertStatesInfo(StatesInfo instance);
    partial void UpdateStatesInfo(StatesInfo instance);
    partial void DeleteStatesInfo(StatesInfo instance);
    #endregion
		
		public StatesDataDataContext() : 
				base(global::BRoberts_CPT_206_Lab_3.Properties.Settings.Default.Database1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StatesDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatesDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatesDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatesDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<StatesInfo> StatesInfos
		{
			get
			{
				return this.GetTable<StatesInfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatesInfo")]
	public partial class StatesInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _State;
		
		private int _Population;
		
		private string _State_Flag_Description;
		
		private string _State_Flower;
		
		private string _State_Bird;
		
		private string _Colors;
		
		private string _Largest_City;
		
		private string _Second_Largest_City;
		
		private string _Third_Largest_City;
		
		private string _State_Capitol;
		
		private decimal _Median_Income;
		
		private decimal _Percent_of_Computer_Jobs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPopulationChanging(int value);
    partial void OnPopulationChanged();
    partial void OnState_Flag_DescriptionChanging(string value);
    partial void OnState_Flag_DescriptionChanged();
    partial void OnState_FlowerChanging(string value);
    partial void OnState_FlowerChanged();
    partial void OnState_BirdChanging(string value);
    partial void OnState_BirdChanged();
    partial void OnColorsChanging(string value);
    partial void OnColorsChanged();
    partial void OnLargest_CityChanging(string value);
    partial void OnLargest_CityChanged();
    partial void OnSecond_Largest_CityChanging(string value);
    partial void OnSecond_Largest_CityChanged();
    partial void OnThird_Largest_CityChanging(string value);
    partial void OnThird_Largest_CityChanged();
    partial void OnState_CapitolChanging(string value);
    partial void OnState_CapitolChanged();
    partial void OnMedian_IncomeChanging(decimal value);
    partial void OnMedian_IncomeChanged();
    partial void OnPercent_of_Computer_JobsChanging(decimal value);
    partial void OnPercent_of_Computer_JobsChanged();
    #endregion
		
		public StatesInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Population", DbType="Int NOT NULL")]
		public int Population
		{
			get
			{
				return this._Population;
			}
			set
			{
				if ((this._Population != value))
				{
					this.OnPopulationChanging(value);
					this.SendPropertyChanging();
					this._Population = value;
					this.SendPropertyChanged("Population");
					this.OnPopulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[State Flag Description]", Storage="_State_Flag_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string State_Flag_Description
		{
			get
			{
				return this._State_Flag_Description;
			}
			set
			{
				if ((this._State_Flag_Description != value))
				{
					this.OnState_Flag_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._State_Flag_Description = value;
					this.SendPropertyChanged("State_Flag_Description");
					this.OnState_Flag_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[State Flower]", Storage="_State_Flower", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string State_Flower
		{
			get
			{
				return this._State_Flower;
			}
			set
			{
				if ((this._State_Flower != value))
				{
					this.OnState_FlowerChanging(value);
					this.SendPropertyChanging();
					this._State_Flower = value;
					this.SendPropertyChanged("State_Flower");
					this.OnState_FlowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[State Bird]", Storage="_State_Bird", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string State_Bird
		{
			get
			{
				return this._State_Bird;
			}
			set
			{
				if ((this._State_Bird != value))
				{
					this.OnState_BirdChanging(value);
					this.SendPropertyChanging();
					this._State_Bird = value;
					this.SendPropertyChanged("State_Bird");
					this.OnState_BirdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Colors", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Colors
		{
			get
			{
				return this._Colors;
			}
			set
			{
				if ((this._Colors != value))
				{
					this.OnColorsChanging(value);
					this.SendPropertyChanging();
					this._Colors = value;
					this.SendPropertyChanged("Colors");
					this.OnColorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Largest City]", Storage="_Largest_City", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Largest_City
		{
			get
			{
				return this._Largest_City;
			}
			set
			{
				if ((this._Largest_City != value))
				{
					this.OnLargest_CityChanging(value);
					this.SendPropertyChanging();
					this._Largest_City = value;
					this.SendPropertyChanged("Largest_City");
					this.OnLargest_CityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Second Largest City]", Storage="_Second_Largest_City", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Second_Largest_City
		{
			get
			{
				return this._Second_Largest_City;
			}
			set
			{
				if ((this._Second_Largest_City != value))
				{
					this.OnSecond_Largest_CityChanging(value);
					this.SendPropertyChanging();
					this._Second_Largest_City = value;
					this.SendPropertyChanged("Second_Largest_City");
					this.OnSecond_Largest_CityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Third Largest City]", Storage="_Third_Largest_City", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Third_Largest_City
		{
			get
			{
				return this._Third_Largest_City;
			}
			set
			{
				if ((this._Third_Largest_City != value))
				{
					this.OnThird_Largest_CityChanging(value);
					this.SendPropertyChanging();
					this._Third_Largest_City = value;
					this.SendPropertyChanged("Third_Largest_City");
					this.OnThird_Largest_CityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[State Capitol]", Storage="_State_Capitol", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string State_Capitol
		{
			get
			{
				return this._State_Capitol;
			}
			set
			{
				if ((this._State_Capitol != value))
				{
					this.OnState_CapitolChanging(value);
					this.SendPropertyChanging();
					this._State_Capitol = value;
					this.SendPropertyChanged("State_Capitol");
					this.OnState_CapitolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Median Income]", Storage="_Median_Income", DbType="Money NOT NULL")]
		public decimal Median_Income
		{
			get
			{
				return this._Median_Income;
			}
			set
			{
				if ((this._Median_Income != value))
				{
					this.OnMedian_IncomeChanging(value);
					this.SendPropertyChanging();
					this._Median_Income = value;
					this.SendPropertyChanged("Median_Income");
					this.OnMedian_IncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Percent of Computer Jobs]", Storage="_Percent_of_Computer_Jobs", DbType="Decimal(18,0) NOT NULL")]
		public decimal Percent_of_Computer_Jobs
		{
			get
			{
				return this._Percent_of_Computer_Jobs;
			}
			set
			{
				if ((this._Percent_of_Computer_Jobs != value))
				{
					this.OnPercent_of_Computer_JobsChanging(value);
					this.SendPropertyChanging();
					this._Percent_of_Computer_Jobs = value;
					this.SendPropertyChanged("Percent_of_Computer_Jobs");
					this.OnPercent_of_Computer_JobsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
